'\" t
.\"     Title: mseedrename
.\"    Author: [see the "AUTHOR(S)" section]
.\" Generator: Asciidoctor 2.0.10
.\"      Date: 2022-12-06
.\"    Manual: GIPPtools Command Manual
.\"    Source: Release 2022.340
.\"  Language: English
.\"
.TH "MSEEDRENAME" "1" "2022-12-06" "Release 2022.340" "GIPPtools Command Manual"
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.ss \n[.ss] 0
.nh
.ad l
.de URL
\fI\\$2\fP <\\$1>\\$3
..
.als MTO URL
.if \n[.g] \{\
.  mso www.tmac
.  am URL
.    ad l
.  .
.  am MTO
.    ad l
.  .
.  LINKSTYLE blue R < >
.\}
.SH "NAME"
mseedrename \- systematically rename miniSEED files using a template
.SH "SYNOPSIS"
.sp
.sp
.nf
mseedrename  [\-\-dry\-run] [\-v|\-\-verbose]
             [\-\-template=\fITEMPLATE\fP] [\-\-output\-dir=\fIDIRECTORY\fP]
             [\-\-force\-overwrite] [\-\-transfer\-mode=\fIMODE\fP]
             [\-\-include\-pattern=\fIPATTERN\fP]...
             \fIfile\fP | \fIdirectory\fP...
.fi
.br
.sp
.sp
.nf
mseedrename  [\-h|\-\-help] [\-\-version] [\-\-sysinfo]
.fi
.br
.SH "DESCRIPTION"
.sp
\fBMseedrename\fP systematically renames the given (miniSEED) files using a user
provided \fITEMPLATE\fP.
.sp
If directories are given at the command line, \fBmseedrename\fP will search them
recursively for files applying the template to each file found.
.sp
When processing files, \fBmseedrename\fP will read the very first miniSEED
record contained in the source file. From this record information about
recording start time, station id, etc. is obtained. This information is
used when interpreting the \fITEMPLATE\fP, replacing each variable found by
its corresponding value. The new filename then is constructed from the
interpreted \fITEMPLATE\fP and the \fIDIRECTORY\fP given by the \f(CR\-\-output\-dir\fP
option (if available). Finally, the source file is copied or moved to its
new destination depending on the \f(CR\-\-transfer\-mode\fP option.
.sp
Obviously, the capability to replace variables in the \fITEMPLATE\fP depends
on the information that can be obtained from the source file in the first
place. If the source is not a miniSEED file and therefore cannot provide
the necessary information replacing most template keywords must fail!
.sp
To somewhat mitigate the problem the program also can obtain at least some
(but not all) variable values from the filename of the source file. This
fallback mechanism is used when the source is not a miniSEED file but its
filename follows the pattern "e\fINNNNYYMMDDHHMMSS\fP.*". Here, the letter
\(oqe\(cq followed by four digits \fINNNN\fP is used as station id, \fIYYMMDD\fP
represents the date and \fIHHMMSS\fP the time. (\fINote:\fP All files generated by
GIPP EDLs follow this convention. GIPP EDR units create similar files
starting with the character \(oqr\(cq.)
.SH "OPTIONS"
.sp
The program pretty much follows expected Unix command line syntax. Some
command line options have two variants, one long and an additional short one
(for convenience). These are shown below, separated by commas. However, most
options only have a long variant. The \(oq\f(CR=\fP\(cq for options that take a
parameter is required and can not be replaced by a whitespace.
.sp
\-h, \-\-help
.RS 4
Print a brief summary of all available command line options and exit.
.RE
.sp
\-\-version
.RS 4
Print the \fBmseedrename\fP release information and exit.
.RE
.sp
\-\-sysinfo
.RS 4
Provide some basic system information and exit.
.RE
.sp
\-\-dry\-run
.RS 4
Perform a trial run with no changes and modifications made whatsoever to
the file system while at the same time producing (almost) the same user
feedback as a real run. This option is most commonly used in combination
with the \f(CR\-\-verbose\fP options to see what the \fBmseedrename\fP command is about
to do before one actually runs it for real.
.RE
.sp
\-v, \-\-verbose
.RS 4
This option increases the amount of information given to the user during
program execution. By default, (i.e. without this option) \fBmseedrename\fP only
reports warnings and errors. (See the diagnostics section below.)
.RE
.sp
\-\-template=\fITEMPLATE\fP
.RS 4
.sp
The given \fITEMPLATE\fP controls the automatic generation of the new filename.
Here, every character of \fITEMPLATE\fP is used one to one for the new filename
except the following variables. They are interpreted and replaced with their
corresponding value (taken from the first miniSEED record of the currently
processed input file). The following keys are possible:
.sp
%%
.RS 4
a literal % character
.RE
.sp
%f
.RS 4
original filename (including suffix)
.RE
.sp
%b
.RS 4
basename (i.e. filename without suffix)
.RE
.sp
%e
.RS 4
extension (filename suffix without the dot)
.RE
.sp
%Y
.RS 4
year (including century, i.e. 4 digits)
.RE
.sp
%y
.RS 4
year (without century, i.e. 2 digits)
.RE
.sp
%m
.RS 4
month (2 digits)
.RE
.sp
%d
.RS 4
day (of month, 2 digits)
.RE
.sp
%j
.RS 4
day of year (3 digits)
.RE
.sp
%H
.RS 4
hour (2 digits)
.RE
.sp
%M
.RS 4
minute (2 digits)
.RE
.sp
%s
.RS 4
second (2 digits)
.RE
.sp
%T
.RS 4
complete time (equivalent to %H:%M:%S)
.RE
.sp
%F
.RS 4
complete date (equivalent to %Y\-%m\-%d)
.RE
.sp
%G
.RS 4
GEOFON style (equivalent to %Y/%S/%j/%f)
.RE
.sp
%S
.RS 4
miniSEED station id (up to 5 characters)
.RE
.sp
%L
.RS 4
miniSEED location id (up to 2 characters)
.RE
.sp
%C
.RS 4
miniSEED channel id (up to 3 characters)
.RE
.sp
%N
.RS 4
miniSEED network id (up to 2 characters)
.RE
.sp
%r
.RS 4
miniSEED sample rate (rounded to the closest integer number)
.RE
.sp
Please note that usage of \(oq/\(cq characters is explicitly allowed in the
filename template indicating additional subdirectory levels. The respective
directories will automatically be created as needed. Variables containing
time information are read from the first miniSEED record in the file and
usually represent the start time of the recording in that file.
.sp
If no filename template is given at the command line, the filename keyword
("%f") is used as default. (This will effectively collapse any complex
directory tree used as input into a single flat output directory.)
.if n .sp
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
.B Caution
.ps -1
.br
.sp
You will run into trouble when you try to rename a non\-miniSEED
file using a keyword only available for miniSEED files (e.g. the
network id "%N"). Since a non\-miniSEED source file simply cannot
provide the network id required to replace the "%N" keyword in the
template string the rename operation must fail!
.sp .5v
.RE
.RE
.sp
\-\-output\-dir=\fIDIRECTORY\fP
.RS 4
Use \fIDIRECTORY\fP as a starting point for all paths and filenames that were
generated from the filename template (see option \f(CR\-\-template\fP described
above). The directory must exist and be writable! Already existing files
will not be overwritten unless the \f(CR\-\-force\-overwrite\fP option is used as
well.
.sp
If this option is not used, the current working directory of the user will
be used as starting point instead.
.if n .sp
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
.B Caution
.ps -1
.br
.sp
The rule that resulting filenames are always relative to the output
\fIDIRECTORY\fP or the users current working directory is meant to
protect you from accidentally overwriting system files. Please
note however that there is no guarantee! The mechanism could be
circumvented by e.g. fooling around with symbolic links or using
dot\-dot components (\(oq..\(cq) in the filename template. You have
been warned!
.sp .5v
.RE
.RE
.sp
\-\-force\-overwrite
.RS 4
If this option is used, already existing files will be overwritten without
mercy!
.sp
The default behavior however is \fBnot\fP to overwrite already existing files.
Instead, a new file is created with an additional number in between filename
and extension.
.RE
.sp
\-\-transfer\-mode=\fIMODE\fP
.RS 4
.sp
Select the file transfer mode. Here \fIMODE\fP can be one of the following:
.sp
\fICOPY\fP
.RS 4
Copy files and do not modify the source. This is the default mode.
.RE
.sp
\fIMOVE\fP
.RS 4
Move files, deleting already transferred source files in the process.
.sp
Only successfully transferred files will be deleted. The source directory
tree (even if the remaining directories are empty) is not touched. This
mode is mostly intended for situations where you are desperately short on
disk space.
.RE
.if n .sp
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
.B Caution
.ps -1
.br
.sp
Use the \fIMOVE\fP mode only if you are very sure there will
be no problems (e.g. by first testing the command using
the \f(CR\-\-dry\-run\fP option).
.sp .5v
.RE
.RE
.sp
\-\-include\-pattern=\fIPATTERN\fP
.RS 4
Only process files whose filename matches the given \fIPATTERN\fP. Files with
a name not matching the search \fIPATTERN\fP will be ignored. This option is
quite useful to speed up recursive searches through large subdirectory trees
and can be used more than once in the same command line.
.sp
You can use the two wild card characters (\f(CR*\fP and \f(CR?\fP) when specifying a
\fIPATTERN\fP (e.g. \f(CR*.pri?\fP). Or alternatively, you can also use a predefined
filter called \f(CRGIPP\fP that can be used to exclude all files not following the
usual GIPP naming convention for miniSEED files recorded by
\c
.URL "http://www.earthdata.co.uk" "Earth Data"
loggers (e.g. message logging or status files).
.if n .sp
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
.B Caution
.ps -1
.br
.sp
The search \fIPATTERN\fP is only applied to the filename part and not
to the full pathname of a file.
.sp .5v
.RE
.RE
.SH "ENVIRONMENT"
.sp
The following environment variables can optionally be used to influence
the behavior of the GIPPtool utilities.
.sp
GIPPTOOLS_HOME
.RS 4
This environment variable is used to find the location of the GIPPtools
installation directory. In particular, the Java class files that make up the
GIPPtools are expected to be in the \f(CRjava\fP subdirectory of \fBGIPPTOOLS_HOME\fP.
.RE
.sp
GIPPTOOLS_JAVA
.RS 4
The utilities of the GIPPtools are written in the programming language Java
and consequently need a Java Runtime Environment (JRE) to execute. Use this
variable to specify the location of the JRE which should be used.
.RE
.sp
GIPPTOOLS_OPTS
.RS 4
You can use this environment variable for additional fine\-tuning of the
Java runtime environment. This is typically used to set the Java heap size
available to GIPPtool programs.
.RE
.sp
It is usually not necessary to define any of those variables as suitable
values should be selected automatically. However, if the automatic detection
build into the start script fails, or you need to choose between different
GIPPtool or Java runtime releases installed on your computer, these
environment variables might become quite helpful to troubleshoot the
situation.
.SH "DIAGNOSTICS"
.sp
Occasionally, the \fBmseedrename\fP utility will produce user feedback. In general,
user messages are classified as \fIINFO\fP, \fIWARNING\fP or \fIERROR\fP. The \fIINFO\fP
messages are only displayed when the \f(CR\-\-verbose\fP command line option is used.
They usually report about the progress of the program run, give statistical
information or write a final summary.
.sp
More important are \fIWARNING\fP messages. In general, they warn about (possible)
issues that may influence the outcome. Although the program will continue
with execution, you certainly should check the results carefully. You might
not have gotten what you (thought you) asked for. Finally, \fIERROR\fP messages
inform about problems that can not be resolved automatically. Program
execution usually stops and the user must fix the cause of the error first.
.sp
A good method to see what will happen is to use the \f(CR\-\-dry\-run\fP and the
\f(CR\-\-verbose\fP command line option at the same time. If user feedback indicates
that \fBmseedrename\fP works as expected it can be started again, this time without
the \f(CR\-\-dry\-run\fP option.
.SH "EXIT CODES"
.sp
Use the following program exit codes when calling \fBmseedrename\fP from scripts
or other programs to see if \fBmseedrename\fP finished successfully. Any non\-zero
code indicates an \fIERROR\fP!
.sp
0
.RS 4
Success.
.RE
.sp
64
.RS 4
Command line syntax or usage error.
.RE
.sp
66
.RS 4
An input file did not exist or was not readable.
.RE
.sp
74
.RS 4
I/O error.
.RE
.sp
99
.RS 4
Other, unspecified errors.
.RE
.SH "EXAMPLES"
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.  sp -1
.  IP " 1." 4.2
.\}
You have hundreds of miniSEED files in a single unsorted directory and
would like to sort them by date into separate subdirectories for easier
handling:
.sp
.if n .RS 4
.nf
mseedrename \-\-verbose \-\-template=%F/%f \-output\-dir=./sorted ./unsorted
.fi
.if n .RE
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.  sp -1
.  IP " 2." 4.2
.\}
Due to some mishap in the field, all filenames are wrong, and you need to
rename them. Unfortunately, you are also running low on disk space. Try
e.g. the following command and carefully study the diagnostic messages
.sp
.if n .RS 4
.nf
mseedrename \-\-dry\-run \-\-verbose \-\-transfer\-mode=MOVE \-\-template=%S%y%m%d%H%M%s.%C \-\-output\-dir=./sorted ./unsorted
.fi
.if n .RE
.sp
After checking for any warnings or severe errors you can re\-run the command,
this time without the \f(CR\-\-dry\-run\fP option.
.RE
.SH "FILES"
.sp
$GIPPTOOLS_HOME/bin/mseedrename
.RS 4
The \fBmseedrename\fP "program". Usually just a copy of or symbolic link pointing
to the standard GIPPtools start script.
.RE
.sp
$GIPPTOOLS_HOME/bin/gipptools
.RS 4
The GIPPtools start script. Almost all utilities of the GIPPtools package
are started from this shell script.
.RE
.SH "SEE ALSO"
.sp
\fBgipptools\fP(1), \fBcube2ascii\fP(1), \fBcube2mseed\fP(1), \fBcube2segy\fP(1),
\fBcubeevent\fP(1), \fBcubeinfo\fP(1), \fBmseed2ascii\fP(1), \fBmseed2mseed\fP(1),
\fBmseed2pdas\fP(1), \fBmseed2segy\fP(1), \fBmseedcut\fP(1), \fBmseedinfo\fP(1),
\fBmseedrecover\fP(1)
.SH "BUGS AND CAVEATS"
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
The \fBmseedrename\fP utility assumes that each miniSEED input file contains
only one continuous time series respectively! It will only look at the first
miniSEED record of each file when replacing variables in the template string.
Unfortunately, this approach fails (without warning) when \fBmseedrename\fP is
confronted with a multiplexed miniSEED file.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
Java 1.5 does not know about symbolic links and treats them as plain
files. Consequently, \fBmseedrename\fP will move/copy the content of the file
to which the encountered symbolic link points as if it were a normal
file. This might or might not be what you expected...
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fBMseedrename\fP attempts to preserve the "last modified" time associated
with the renamed file. However, not all file systems are equal and the
attempt might not be entirely successful.
.RE