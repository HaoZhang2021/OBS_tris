'\" t
.\"     Title: mseed2ascii
.\"    Author: [see the "AUTHOR(S)" section]
.\" Generator: Asciidoctor 2.0.10
.\"      Date: 2022-12-06
.\"    Manual: GIPPtools Command Manual
.\"    Source: Release 2022.340
.\"  Language: English
.\"
.TH "MSEED2ASCII" "1" "2022-12-06" "Release 2022.340" "GIPPtools Command Manual"
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.ss \n[.ss] 0
.nh
.ad l
.de URL
\fI\\$2\fP <\\$1>\\$3
..
.als MTO URL
.if \n[.g] \{\
.  mso www.tmac
.  am URL
.    ad l
.  .
.  am MTO
.    ad l
.  .
.  LINKSTYLE blue R < >
.\}
.SH "NAME"
mseed2ascii \- convert miniSEED data to various ASCII text format
.SH "SYNOPSIS"
.sp
.sp
.nf
mseed2ascii  [\-v|\-\-verbose] [\-\-include\-pattern=\fIPATTERN\fP]...
             [\-\-select\-station=\fISTATION\fP]... [\-\-select\-channel=\fICHANNEL\fP]...
             [\-\-output\-dir=\fIDIRECTORY\fP [\-\-force\-overwrite] [\-\-force\-concat]]
             [\-\-format=\fIFORMAT\fP]
             [\fIfile\fP | \fIdirectory\fP]...
.fi
.br
.sp
.sp
.nf
mseed2ascii  [\-h|\-\-help] [\-\-version] [\-\-sysinfo]
.fi
.br
.SH "DESCRIPTION"
.sp
\fBMseed2ascii\fP reads from one or more \fIfiles\fP (or standard input) and
converts each miniSEED record in the input to ASCII text format. If a
\fIdirectory\fP is given instead, \fBmseed2ascii\fP searches recursively for
input files inside the directory. The search can be restricted to
contain only files with a name also matched by a pattern given via one
or more \f(CR\-\-include\-pattern\fP options.
.sp
The conversion result is written to standard output (i.e. console) or
saved in an output directory (use option \f(CR\-\-output\-dir\fP). Different
predefined output variants (data and/or header, ...) are available can
be selected using the \f(CR\-\-format\fP option.
.SH "OPTIONS"
.sp
The program pretty much follows expected Unix command line syntax. Some
command line options have two variants, one long and an additional short one
(for convenience). These are shown below, separated by commas. However, most
options only have a long variant. The \(oq\f(CR=\fP\(cq for options that take a
parameter is required and can not be replaced by a whitespace.
.sp
\-h, \-\-help
.RS 4
Print a brief summary of all available command line options and exit.
.RE
.sp
\-\-version
.RS 4
Print the \fBmseed2ascii\fP release information and exit.
.RE
.sp
\-\-sysinfo
.RS 4
Provide some basic system information and exit.
.RE
.sp
\-v, \-\-verbose
.RS 4
This option increases the amount of information given to the user during
program execution. By default, (i.e. without this option) \fBmseed2ascii\fP only
reports warnings and errors. (See the diagnostics section below.)
.RE
.sp
\-\-include\-pattern=\fIPATTERN\fP
.RS 4
Only process files whose filename matches the given \fIPATTERN\fP. Files with
a name not matching the search \fIPATTERN\fP will be ignored. This option is
quite useful to speed up recursive searches through large subdirectory trees
and can be used more than once in the same command line.
.sp
You can use the two wild card characters (\f(CR*\fP and \f(CR?\fP) when specifying a
\fIPATTERN\fP (e.g. \f(CR*.pri?\fP). Or alternatively, you can also use a predefined
filter called \f(CRGIPP\fP that can be used to exclude all files not following the
usual GIPP naming convention for miniSEED files recorded by
\c
.URL "http://www.earthdata.co.uk" "Earth Data"
loggers (e.g. message logging or status files, see examples section below).
.if n .sp
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
.B Caution
.ps -1
.br
.sp
The search \fIPATTERN\fP is only applied to the filename part and not
to the full pathname of a file.
.sp .5v
.RE
.RE
.sp
\-\-select\-station=\fISTATION\fP
.RS 4
Only process miniSEED records with a matching \fISTATION\fP identifier. Records
that do not match the \fISTATION\fP expression are ignored/skipped.
.sp
This command line option understands the two wild card character \f(CR*\fP and \f(CR?\fP
and can be used more than once in a command line.
.RE
.sp
\-\-select\-channel=\fICHANNEL\fP
.RS 4
Only process miniSEED records with a matching \fICHANNEL\fP identifier. Records
that do not match the \fICHANNEL\fP expression are ignored/skipped.
.sp
This command line option understands the two wild card character \f(CR*\fP and \f(CR?\fP
and can be used more than once in a command line.
.RE
.sp
\-\-output\-dir=\fIDIRECTORY\fP
.RS 4
Save the resulting ASCII text files to this \fIDIRECTORY\fP. The directory must
already exist and be writable! Already existing files in that directory will
not be overwritten unless the option \f(CR\-\-force\-overwrite\fP is used as well.
.RE
.sp
\-\-force\-overwrite
.RS 4
If this option is used, already existing files in the output directory
will be overwritten without mercy!
.sp
The default behavior however is \fBnot\fP to overwrite already existing files.
Instead, a new file is created with an additional number in between filename
and extension.
.RE
.sp
\-\-force\-concat
.RS 4
Concatenate the ASCII text output creating as few new files as possible. This
means that a new output file is only started when there is a (data)
discontinuity in the miniSEED input. Without discontinuity the converted
data is simply appended to the currently used output file.
.sp
By default, however, a separate new output file is created for every single
miniSEED input file.
.RE
.sp
\-\-format=\fIFORMAT\fP
.RS 4
.sp
Select one of the predefined output formats:
.sp
\fIHEADER\fP
.RS 4
Write out the miniSEED header information for each record.
.RE
.sp
\fIDATA\fP
.RS 4
Write only the sample values contained in the miniSEED records.
.RE
.sp
\fIALL\fP
.RS 4
The combination of the HEADER and DATA format. (This is also the default
output format.)
.RE
.sp
\fIGMT\fP
.RS 4
Write the sample values of each miniSEED record in a two\-column ASCII
format that can be directly used as input to the \fBpsxy\fP command. (The
psxy command is part of the Generic Mapping Tools, GMT.)
.RE
.RE
.SH "ENVIRONMENT"
.sp
The following environment variables can optionally be used to influence
the behavior of the GIPPtool utilities.
.sp
GIPPTOOLS_HOME
.RS 4
This environment variable is used to find the location of the GIPPtools
installation directory. In particular, the Java class files that make up the
GIPPtools are expected to be in the \f(CRjava\fP subdirectory of \fBGIPPTOOLS_HOME\fP.
.RE
.sp
GIPPTOOLS_JAVA
.RS 4
The utilities of the GIPPtools are written in the programming language Java
and consequently need a Java Runtime Environment (JRE) to execute. Use this
variable to specify the location of the JRE which should be used.
.RE
.sp
GIPPTOOLS_OPTS
.RS 4
You can use this environment variable for additional fine\-tuning of the
Java runtime environment. This is typically used to set the Java heap size
available to GIPPtool programs.
.RE
.sp
It is usually not necessary to define any of those variables as suitable
values should be selected automatically. However, if the automatic detection
build into the start script fails, or you need to choose between different
GIPPtool or Java runtime releases installed on your computer, these
environment variables might become quite helpful to troubleshoot the
situation.
.SH "DIAGNOSTICS"
.sp
Occasionally, the \fBmseed2ascii\fP utility will produce user feedback. In general,
user messages are classified as \fIINFO\fP, \fIWARNING\fP or \fIERROR\fP. The \fIINFO\fP
messages are only displayed when the \f(CR\-\-verbose\fP command line option is used.
They usually report about the progress of the program run, give statistical
information or write a final summary.
.sp
More important are \fIWARNING\fP messages. In general, they warn about (possible)
issues that may influence the outcome. Although the program will continue
with execution, you certainly should check the results carefully. You might
not have gotten what you (thought you) asked for. Finally, \fIERROR\fP messages
inform about problems that can not be resolved automatically. Program
execution usually stops and the user must fix the cause of the error first.
.SH "EXIT CODES"
.sp
Use the following program exit codes when calling \fBmseed2ascii\fP from scripts
or other programs to see if \fBmseed2ascii\fP finished successfully. Any non\-zero
code indicates an \fIERROR\fP!
.sp
0
.RS 4
Success.
.RE
.sp
64
.RS 4
Command line syntax or usage error.
.RE
.sp
65
.RS 4
Data format error. (The input was not a valid miniSEED file.)
.RE
.sp
66
.RS 4
An input file did not exist or was not readable.
.RE
.sp
70
.RS 4
Error in internal program logic.
.RE
.sp
74
.RS 4
I/O error.
.RE
.sp
99
.RS 4
Other, unspecified errors.
.RE
.SH "EXAMPLES"
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.  sp -1
.  IP " 1." 4.2
.\}
To see an ASCII representation of a single file you could use one of the
following variations:
.sp
.if n .RS 4
.nf
mseed2ascii input.mseed
.fi
.if n .RE
.sp
.if n .RS 4
.nf
mseed2ascii input.mseed | more
.fi
.if n .RE
.sp
.if n .RS 4
.nf
cat input.mseed | mseed2ascii > output.txt
.fi
.if n .RE
.sp
The first command will write header and data of the miniSEED records to
the console. The second will use the pager program \f(CRmore\fP to display the
result. And the last variant will save the content of the input.mseed
file to the output.txt file.
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.  sp -1
.  IP " 2." 4.2
.\}
You have a multiplexed miniSEED file with logging information embedded
in a special \f(CRLOG\fP recording channel. The logging data is stored as
ASCII encoded content inside "normal" miniSEED records. To extract the
logfile use e.g.:
.sp
.if n .RS 4
.nf
mseed2ascii \-\-format=DATA \-\-select\-channel=LOG input.mseed > logfile.txt
.fi
.if n .RE
.sp
Here, output format DATA is selected so that information about the miniSEED
record is not intermixed with the logging file. In addition, the \f(CRLOG\fP
recording channel is picked for processing with the \f(CR\-\-select\-channel\fP option.
.RE
.SH "FILES"
.sp
$GIPPTOOLS_HOME/bin/mseed2ascii
.RS 4
The \fBmseed2ascii\fP "program". Usually just a copy of or symbolic link pointing
to the standard GIPPtools start script.
.RE
.sp
$GIPPTOOLS_HOME/bin/gipptools
.RS 4
The GIPPtools start script. Almost all utilities of the GIPPtools package
are started from this shell script.
.RE
.SH "SEE ALSO"
.sp
\fBgipptools\fP(1), \fBcube2ascii\fP(1), \fBcube2mseed\fP(1), \fBcube2segy\fP(1),
\fBcubeevent\fP(1), \fBcubeinfo\fP(1), \fBmseed2mseed\fP(1), \fBmseed2pdas\fP(1),
\fBmseed2segy\fP(1), \fBmseedcut\fP(1), \fBmseedinfo\fP(1), \fBmseedrecover\fP(1),
\fBmseedrename\fP(1)
.SH "BUGS AND CAVEATS"
.sp
None so far.